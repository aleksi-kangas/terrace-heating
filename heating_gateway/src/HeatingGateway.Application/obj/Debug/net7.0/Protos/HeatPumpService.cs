// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/heat_pump_service.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace HeatPump {

  /// <summary>Holder for reflection information generated from Protos/heat_pump_service.proto</summary>
  public static partial class HeatPumpServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for Protos/heat_pump_service.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static HeatPumpServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch5Qcm90b3MvaGVhdF9wdW1wX3NlcnZpY2UucHJvdG8SCWhlYXRfcHVtcBob",
            "Z29vZ2xlL3Byb3RvYnVmL2VtcHR5LnByb3RvGh5nb29nbGUvcHJvdG9idWYv",
            "d3JhcHBlcnMucHJvdG8iWgoXV2Vla2RheUJvb3N0aW5nU2NoZWR1bGUSEgoK",
            "c3RhcnRfaG91chgBIAEoDRIQCghlbmRfaG91chgCIAEoDRIZChF0ZW1wZXJh",
            "dHVyZV9kZWx0YRgDIAEoBSKGAwoQQm9vc3RpbmdTY2hlZHVsZRIyCgZtb25k",
            "YXkYASABKAsyIi5oZWF0X3B1bXAuV2Vla2RheUJvb3N0aW5nU2NoZWR1bGUS",
            "MwoHdHVlc2RheRgCIAEoCzIiLmhlYXRfcHVtcC5XZWVrZGF5Qm9vc3RpbmdT",
            "Y2hlZHVsZRI1Cgl3ZWRuZXNkYXkYAyABKAsyIi5oZWF0X3B1bXAuV2Vla2Rh",
            "eUJvb3N0aW5nU2NoZWR1bGUSNAoIdGh1cnNkYXkYBCABKAsyIi5oZWF0X3B1",
            "bXAuV2Vla2RheUJvb3N0aW5nU2NoZWR1bGUSMgoGZnJpZGF5GAUgASgLMiIu",
            "aGVhdF9wdW1wLldlZWtkYXlCb29zdGluZ1NjaGVkdWxlEjQKCHNhdHVyZGF5",
            "GAYgASgLMiIuaGVhdF9wdW1wLldlZWtkYXlCb29zdGluZ1NjaGVkdWxlEjIK",
            "BnN1bmRheRgHIAEoCzIiLmhlYXRfcHVtcC5XZWVrZGF5Qm9vc3RpbmdTY2hl",
            "ZHVsZSLLAQoMVGVtcGVyYXR1cmVzEhAKCGNpcmN1aXQxGAEgASgCEhAKCGNp",
            "cmN1aXQyGAIgASgCEhAKCGNpcmN1aXQzGAMgASgCEhQKDGdyb3VuZF9pbnB1",
            "dBgEIAEoAhIVCg1ncm91bmRfb3V0cHV0GAUgASgCEg8KB2hvdF9nYXMYBiAB",
            "KAISDgoGaW5zaWRlGAcgASgCEhIKCmxvd2VyX3RhbmsYCCABKAISDwoHb3V0",
            "c2lkZRgJIAEoAhISCgp1cHBlcl90YW5rGAogASgCIpACCgpUYW5rTGltaXRz",
            "EhoKEmxvd2VyX3RhbmtfbWluaW11bRgBIAEoBRIjChtsb3dlcl90YW5rX21p",
            "bmltdW1fYWRqdXN0ZWQYAiABKAUSGgoSbG93ZXJfdGFua19tYXhpbXVtGAMg",
            "ASgFEiMKG2xvd2VyX3RhbmtfbWF4aW11bV9hZGp1c3RlZBgEIAEoBRIaChJ1",
            "cHBlcl90YW5rX21pbmltdW0YBSABKAUSIwobdXBwZXJfdGFua19taW5pbXVt",
            "X2FkanVzdGVkGAYgASgFEhoKEnVwcGVyX3RhbmtfbWF4aW11bRgHIAEoBRIj",
            "Cht1cHBlcl90YW5rX21heGltdW1fYWRqdXN0ZWQYCCABKAUyqgYKC0hlYXRQ",
            "dW1wU3ZjEk8KFUdldEFjdGl2ZUNpcmN1aXRDb3VudBIWLmdvb2dsZS5wcm90",
            "b2J1Zi5FbXB0eRocLmdvb2dsZS5wcm90b2J1Zi5VSW50MzJWYWx1ZSIAElQK",
            "G0dldENpcmN1aXQzQm9vc3RpbmdTY2hlZHVsZRIWLmdvb2dsZS5wcm90b2J1",
            "Zi5FbXB0eRobLmhlYXRfcHVtcC5Cb29zdGluZ1NjaGVkdWxlIgASVQocR2V0",
            "TG93ZXJUYW5rQm9vc3RpbmdTY2hlZHVsZRIWLmdvb2dsZS5wcm90b2J1Zi5F",
            "bXB0eRobLmhlYXRfcHVtcC5Cb29zdGluZ1NjaGVkdWxlIgASRAoPR2V0VGVt",
            "cGVyYXR1cmVzEhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5GhcuaGVhdF9wdW1w",
            "LlRlbXBlcmF0dXJlcyIAEkAKDUdldFRhbmtMaW1pdHMSFi5nb29nbGUucHJv",
            "dG9idWYuRW1wdHkaFS5oZWF0X3B1bXAuVGFua0xpbWl0cyIAEkoKEklzQ29t",
            "cHJlc3NvckFjdGl2ZRIWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eRoaLmdvb2ds",
            "ZS5wcm90b2J1Zi5Cb29sVmFsdWUiABJLChNJc1NjaGVkdWxpbmdFbmFibGVk",
            "EhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5GhouZ29vZ2xlLnByb3RvYnVmLkJv",
            "b2xWYWx1ZSIAEk8KFVNldEFjdGl2ZUNpcmN1aXRDb3VudBIcLmdvb2dsZS5w",
            "cm90b2J1Zi5VSW50MzJWYWx1ZRoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eSIA",
            "ElQKG1NldENpcmN1aXQzQm9vc3RpbmdTY2hlZHVsZRIbLmhlYXRfcHVtcC5C",
            "b29zdGluZ1NjaGVkdWxlGhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5IgASVQoc",
            "U2V0TG93ZXJUYW5rQm9vc3RpbmdTY2hlZHVsZRIbLmhlYXRfcHVtcC5Cb29z",
            "dGluZ1NjaGVkdWxlGhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5IgBiBnByb3Rv",
            "Mw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::HeatPump.WeekdayBoostingSchedule), global::HeatPump.WeekdayBoostingSchedule.Parser, new[]{ "StartHour", "EndHour", "TemperatureDelta" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HeatPump.BoostingSchedule), global::HeatPump.BoostingSchedule.Parser, new[]{ "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HeatPump.Temperatures), global::HeatPump.Temperatures.Parser, new[]{ "Circuit1", "Circuit2", "Circuit3", "GroundInput", "GroundOutput", "HotGas", "Inside", "LowerTank", "Outside", "UpperTank" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HeatPump.TankLimits), global::HeatPump.TankLimits.Parser, new[]{ "LowerTankMinimum", "LowerTankMinimumAdjusted", "LowerTankMaximum", "LowerTankMaximumAdjusted", "UpperTankMinimum", "UpperTankMinimumAdjusted", "UpperTankMaximum", "UpperTankMaximumAdjusted" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class WeekdayBoostingSchedule : pb::IMessage<WeekdayBoostingSchedule>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WeekdayBoostingSchedule> _parser = new pb::MessageParser<WeekdayBoostingSchedule>(() => new WeekdayBoostingSchedule());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<WeekdayBoostingSchedule> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HeatPump.HeatPumpServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WeekdayBoostingSchedule() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WeekdayBoostingSchedule(WeekdayBoostingSchedule other) : this() {
      startHour_ = other.startHour_;
      endHour_ = other.endHour_;
      temperatureDelta_ = other.temperatureDelta_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WeekdayBoostingSchedule Clone() {
      return new WeekdayBoostingSchedule(this);
    }

    /// <summary>Field number for the "start_hour" field.</summary>
    public const int StartHourFieldNumber = 1;
    private uint startHour_;
    /// <summary>
    /// [  0, 24]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint StartHour {
      get { return startHour_; }
      set {
        startHour_ = value;
      }
    }

    /// <summary>Field number for the "end_hour" field.</summary>
    public const int EndHourFieldNumber = 2;
    private uint endHour_;
    /// <summary>
    /// [  0, 24]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint EndHour {
      get { return endHour_; }
      set {
        endHour_ = value;
      }
    }

    /// <summary>Field number for the "temperature_delta" field.</summary>
    public const int TemperatureDeltaFieldNumber = 3;
    private int temperatureDelta_;
    /// <summary>
    /// [-10, 10]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TemperatureDelta {
      get { return temperatureDelta_; }
      set {
        temperatureDelta_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as WeekdayBoostingSchedule);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(WeekdayBoostingSchedule other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StartHour != other.StartHour) return false;
      if (EndHour != other.EndHour) return false;
      if (TemperatureDelta != other.TemperatureDelta) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (StartHour != 0) hash ^= StartHour.GetHashCode();
      if (EndHour != 0) hash ^= EndHour.GetHashCode();
      if (TemperatureDelta != 0) hash ^= TemperatureDelta.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (StartHour != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(StartHour);
      }
      if (EndHour != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(EndHour);
      }
      if (TemperatureDelta != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(TemperatureDelta);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (StartHour != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(StartHour);
      }
      if (EndHour != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(EndHour);
      }
      if (TemperatureDelta != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(TemperatureDelta);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (StartHour != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StartHour);
      }
      if (EndHour != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EndHour);
      }
      if (TemperatureDelta != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TemperatureDelta);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(WeekdayBoostingSchedule other) {
      if (other == null) {
        return;
      }
      if (other.StartHour != 0) {
        StartHour = other.StartHour;
      }
      if (other.EndHour != 0) {
        EndHour = other.EndHour;
      }
      if (other.TemperatureDelta != 0) {
        TemperatureDelta = other.TemperatureDelta;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StartHour = input.ReadUInt32();
            break;
          }
          case 16: {
            EndHour = input.ReadUInt32();
            break;
          }
          case 24: {
            TemperatureDelta = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            StartHour = input.ReadUInt32();
            break;
          }
          case 16: {
            EndHour = input.ReadUInt32();
            break;
          }
          case 24: {
            TemperatureDelta = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BoostingSchedule : pb::IMessage<BoostingSchedule>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BoostingSchedule> _parser = new pb::MessageParser<BoostingSchedule>(() => new BoostingSchedule());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BoostingSchedule> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HeatPump.HeatPumpServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BoostingSchedule() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BoostingSchedule(BoostingSchedule other) : this() {
      monday_ = other.monday_ != null ? other.monday_.Clone() : null;
      tuesday_ = other.tuesday_ != null ? other.tuesday_.Clone() : null;
      wednesday_ = other.wednesday_ != null ? other.wednesday_.Clone() : null;
      thursday_ = other.thursday_ != null ? other.thursday_.Clone() : null;
      friday_ = other.friday_ != null ? other.friday_.Clone() : null;
      saturday_ = other.saturday_ != null ? other.saturday_.Clone() : null;
      sunday_ = other.sunday_ != null ? other.sunday_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BoostingSchedule Clone() {
      return new BoostingSchedule(this);
    }

    /// <summary>Field number for the "monday" field.</summary>
    public const int MondayFieldNumber = 1;
    private global::HeatPump.WeekdayBoostingSchedule monday_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HeatPump.WeekdayBoostingSchedule Monday {
      get { return monday_; }
      set {
        monday_ = value;
      }
    }

    /// <summary>Field number for the "tuesday" field.</summary>
    public const int TuesdayFieldNumber = 2;
    private global::HeatPump.WeekdayBoostingSchedule tuesday_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HeatPump.WeekdayBoostingSchedule Tuesday {
      get { return tuesday_; }
      set {
        tuesday_ = value;
      }
    }

    /// <summary>Field number for the "wednesday" field.</summary>
    public const int WednesdayFieldNumber = 3;
    private global::HeatPump.WeekdayBoostingSchedule wednesday_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HeatPump.WeekdayBoostingSchedule Wednesday {
      get { return wednesday_; }
      set {
        wednesday_ = value;
      }
    }

    /// <summary>Field number for the "thursday" field.</summary>
    public const int ThursdayFieldNumber = 4;
    private global::HeatPump.WeekdayBoostingSchedule thursday_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HeatPump.WeekdayBoostingSchedule Thursday {
      get { return thursday_; }
      set {
        thursday_ = value;
      }
    }

    /// <summary>Field number for the "friday" field.</summary>
    public const int FridayFieldNumber = 5;
    private global::HeatPump.WeekdayBoostingSchedule friday_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HeatPump.WeekdayBoostingSchedule Friday {
      get { return friday_; }
      set {
        friday_ = value;
      }
    }

    /// <summary>Field number for the "saturday" field.</summary>
    public const int SaturdayFieldNumber = 6;
    private global::HeatPump.WeekdayBoostingSchedule saturday_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HeatPump.WeekdayBoostingSchedule Saturday {
      get { return saturday_; }
      set {
        saturday_ = value;
      }
    }

    /// <summary>Field number for the "sunday" field.</summary>
    public const int SundayFieldNumber = 7;
    private global::HeatPump.WeekdayBoostingSchedule sunday_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HeatPump.WeekdayBoostingSchedule Sunday {
      get { return sunday_; }
      set {
        sunday_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BoostingSchedule);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BoostingSchedule other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Monday, other.Monday)) return false;
      if (!object.Equals(Tuesday, other.Tuesday)) return false;
      if (!object.Equals(Wednesday, other.Wednesday)) return false;
      if (!object.Equals(Thursday, other.Thursday)) return false;
      if (!object.Equals(Friday, other.Friday)) return false;
      if (!object.Equals(Saturday, other.Saturday)) return false;
      if (!object.Equals(Sunday, other.Sunday)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (monday_ != null) hash ^= Monday.GetHashCode();
      if (tuesday_ != null) hash ^= Tuesday.GetHashCode();
      if (wednesday_ != null) hash ^= Wednesday.GetHashCode();
      if (thursday_ != null) hash ^= Thursday.GetHashCode();
      if (friday_ != null) hash ^= Friday.GetHashCode();
      if (saturday_ != null) hash ^= Saturday.GetHashCode();
      if (sunday_ != null) hash ^= Sunday.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (monday_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Monday);
      }
      if (tuesday_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Tuesday);
      }
      if (wednesday_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Wednesday);
      }
      if (thursday_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Thursday);
      }
      if (friday_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Friday);
      }
      if (saturday_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Saturday);
      }
      if (sunday_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Sunday);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (monday_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Monday);
      }
      if (tuesday_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Tuesday);
      }
      if (wednesday_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Wednesday);
      }
      if (thursday_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Thursday);
      }
      if (friday_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Friday);
      }
      if (saturday_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Saturday);
      }
      if (sunday_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Sunday);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (monday_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Monday);
      }
      if (tuesday_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Tuesday);
      }
      if (wednesday_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Wednesday);
      }
      if (thursday_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Thursday);
      }
      if (friday_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Friday);
      }
      if (saturday_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Saturday);
      }
      if (sunday_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Sunday);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BoostingSchedule other) {
      if (other == null) {
        return;
      }
      if (other.monday_ != null) {
        if (monday_ == null) {
          Monday = new global::HeatPump.WeekdayBoostingSchedule();
        }
        Monday.MergeFrom(other.Monday);
      }
      if (other.tuesday_ != null) {
        if (tuesday_ == null) {
          Tuesday = new global::HeatPump.WeekdayBoostingSchedule();
        }
        Tuesday.MergeFrom(other.Tuesday);
      }
      if (other.wednesday_ != null) {
        if (wednesday_ == null) {
          Wednesday = new global::HeatPump.WeekdayBoostingSchedule();
        }
        Wednesday.MergeFrom(other.Wednesday);
      }
      if (other.thursday_ != null) {
        if (thursday_ == null) {
          Thursday = new global::HeatPump.WeekdayBoostingSchedule();
        }
        Thursday.MergeFrom(other.Thursday);
      }
      if (other.friday_ != null) {
        if (friday_ == null) {
          Friday = new global::HeatPump.WeekdayBoostingSchedule();
        }
        Friday.MergeFrom(other.Friday);
      }
      if (other.saturday_ != null) {
        if (saturday_ == null) {
          Saturday = new global::HeatPump.WeekdayBoostingSchedule();
        }
        Saturday.MergeFrom(other.Saturday);
      }
      if (other.sunday_ != null) {
        if (sunday_ == null) {
          Sunday = new global::HeatPump.WeekdayBoostingSchedule();
        }
        Sunday.MergeFrom(other.Sunday);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (monday_ == null) {
              Monday = new global::HeatPump.WeekdayBoostingSchedule();
            }
            input.ReadMessage(Monday);
            break;
          }
          case 18: {
            if (tuesday_ == null) {
              Tuesday = new global::HeatPump.WeekdayBoostingSchedule();
            }
            input.ReadMessage(Tuesday);
            break;
          }
          case 26: {
            if (wednesday_ == null) {
              Wednesday = new global::HeatPump.WeekdayBoostingSchedule();
            }
            input.ReadMessage(Wednesday);
            break;
          }
          case 34: {
            if (thursday_ == null) {
              Thursday = new global::HeatPump.WeekdayBoostingSchedule();
            }
            input.ReadMessage(Thursday);
            break;
          }
          case 42: {
            if (friday_ == null) {
              Friday = new global::HeatPump.WeekdayBoostingSchedule();
            }
            input.ReadMessage(Friday);
            break;
          }
          case 50: {
            if (saturday_ == null) {
              Saturday = new global::HeatPump.WeekdayBoostingSchedule();
            }
            input.ReadMessage(Saturday);
            break;
          }
          case 58: {
            if (sunday_ == null) {
              Sunday = new global::HeatPump.WeekdayBoostingSchedule();
            }
            input.ReadMessage(Sunday);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (monday_ == null) {
              Monday = new global::HeatPump.WeekdayBoostingSchedule();
            }
            input.ReadMessage(Monday);
            break;
          }
          case 18: {
            if (tuesday_ == null) {
              Tuesday = new global::HeatPump.WeekdayBoostingSchedule();
            }
            input.ReadMessage(Tuesday);
            break;
          }
          case 26: {
            if (wednesday_ == null) {
              Wednesday = new global::HeatPump.WeekdayBoostingSchedule();
            }
            input.ReadMessage(Wednesday);
            break;
          }
          case 34: {
            if (thursday_ == null) {
              Thursday = new global::HeatPump.WeekdayBoostingSchedule();
            }
            input.ReadMessage(Thursday);
            break;
          }
          case 42: {
            if (friday_ == null) {
              Friday = new global::HeatPump.WeekdayBoostingSchedule();
            }
            input.ReadMessage(Friday);
            break;
          }
          case 50: {
            if (saturday_ == null) {
              Saturday = new global::HeatPump.WeekdayBoostingSchedule();
            }
            input.ReadMessage(Saturday);
            break;
          }
          case 58: {
            if (sunday_ == null) {
              Sunday = new global::HeatPump.WeekdayBoostingSchedule();
            }
            input.ReadMessage(Sunday);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Temperatures : pb::IMessage<Temperatures>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Temperatures> _parser = new pb::MessageParser<Temperatures>(() => new Temperatures());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Temperatures> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HeatPump.HeatPumpServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Temperatures() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Temperatures(Temperatures other) : this() {
      circuit1_ = other.circuit1_;
      circuit2_ = other.circuit2_;
      circuit3_ = other.circuit3_;
      groundInput_ = other.groundInput_;
      groundOutput_ = other.groundOutput_;
      hotGas_ = other.hotGas_;
      inside_ = other.inside_;
      lowerTank_ = other.lowerTank_;
      outside_ = other.outside_;
      upperTank_ = other.upperTank_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Temperatures Clone() {
      return new Temperatures(this);
    }

    /// <summary>Field number for the "circuit1" field.</summary>
    public const int Circuit1FieldNumber = 1;
    private float circuit1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Circuit1 {
      get { return circuit1_; }
      set {
        circuit1_ = value;
      }
    }

    /// <summary>Field number for the "circuit2" field.</summary>
    public const int Circuit2FieldNumber = 2;
    private float circuit2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Circuit2 {
      get { return circuit2_; }
      set {
        circuit2_ = value;
      }
    }

    /// <summary>Field number for the "circuit3" field.</summary>
    public const int Circuit3FieldNumber = 3;
    private float circuit3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Circuit3 {
      get { return circuit3_; }
      set {
        circuit3_ = value;
      }
    }

    /// <summary>Field number for the "ground_input" field.</summary>
    public const int GroundInputFieldNumber = 4;
    private float groundInput_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float GroundInput {
      get { return groundInput_; }
      set {
        groundInput_ = value;
      }
    }

    /// <summary>Field number for the "ground_output" field.</summary>
    public const int GroundOutputFieldNumber = 5;
    private float groundOutput_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float GroundOutput {
      get { return groundOutput_; }
      set {
        groundOutput_ = value;
      }
    }

    /// <summary>Field number for the "hot_gas" field.</summary>
    public const int HotGasFieldNumber = 6;
    private float hotGas_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float HotGas {
      get { return hotGas_; }
      set {
        hotGas_ = value;
      }
    }

    /// <summary>Field number for the "inside" field.</summary>
    public const int InsideFieldNumber = 7;
    private float inside_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Inside {
      get { return inside_; }
      set {
        inside_ = value;
      }
    }

    /// <summary>Field number for the "lower_tank" field.</summary>
    public const int LowerTankFieldNumber = 8;
    private float lowerTank_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float LowerTank {
      get { return lowerTank_; }
      set {
        lowerTank_ = value;
      }
    }

    /// <summary>Field number for the "outside" field.</summary>
    public const int OutsideFieldNumber = 9;
    private float outside_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Outside {
      get { return outside_; }
      set {
        outside_ = value;
      }
    }

    /// <summary>Field number for the "upper_tank" field.</summary>
    public const int UpperTankFieldNumber = 10;
    private float upperTank_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float UpperTank {
      get { return upperTank_; }
      set {
        upperTank_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Temperatures);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Temperatures other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Circuit1, other.Circuit1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Circuit2, other.Circuit2)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Circuit3, other.Circuit3)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(GroundInput, other.GroundInput)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(GroundOutput, other.GroundOutput)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(HotGas, other.HotGas)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Inside, other.Inside)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(LowerTank, other.LowerTank)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Outside, other.Outside)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(UpperTank, other.UpperTank)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Circuit1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Circuit1);
      if (Circuit2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Circuit2);
      if (Circuit3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Circuit3);
      if (GroundInput != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(GroundInput);
      if (GroundOutput != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(GroundOutput);
      if (HotGas != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(HotGas);
      if (Inside != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Inside);
      if (LowerTank != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(LowerTank);
      if (Outside != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Outside);
      if (UpperTank != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(UpperTank);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Circuit1 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Circuit1);
      }
      if (Circuit2 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Circuit2);
      }
      if (Circuit3 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Circuit3);
      }
      if (GroundInput != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(GroundInput);
      }
      if (GroundOutput != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(GroundOutput);
      }
      if (HotGas != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(HotGas);
      }
      if (Inside != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(Inside);
      }
      if (LowerTank != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(LowerTank);
      }
      if (Outside != 0F) {
        output.WriteRawTag(77);
        output.WriteFloat(Outside);
      }
      if (UpperTank != 0F) {
        output.WriteRawTag(85);
        output.WriteFloat(UpperTank);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Circuit1 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Circuit1);
      }
      if (Circuit2 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Circuit2);
      }
      if (Circuit3 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Circuit3);
      }
      if (GroundInput != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(GroundInput);
      }
      if (GroundOutput != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(GroundOutput);
      }
      if (HotGas != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(HotGas);
      }
      if (Inside != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(Inside);
      }
      if (LowerTank != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(LowerTank);
      }
      if (Outside != 0F) {
        output.WriteRawTag(77);
        output.WriteFloat(Outside);
      }
      if (UpperTank != 0F) {
        output.WriteRawTag(85);
        output.WriteFloat(UpperTank);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Circuit1 != 0F) {
        size += 1 + 4;
      }
      if (Circuit2 != 0F) {
        size += 1 + 4;
      }
      if (Circuit3 != 0F) {
        size += 1 + 4;
      }
      if (GroundInput != 0F) {
        size += 1 + 4;
      }
      if (GroundOutput != 0F) {
        size += 1 + 4;
      }
      if (HotGas != 0F) {
        size += 1 + 4;
      }
      if (Inside != 0F) {
        size += 1 + 4;
      }
      if (LowerTank != 0F) {
        size += 1 + 4;
      }
      if (Outside != 0F) {
        size += 1 + 4;
      }
      if (UpperTank != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Temperatures other) {
      if (other == null) {
        return;
      }
      if (other.Circuit1 != 0F) {
        Circuit1 = other.Circuit1;
      }
      if (other.Circuit2 != 0F) {
        Circuit2 = other.Circuit2;
      }
      if (other.Circuit3 != 0F) {
        Circuit3 = other.Circuit3;
      }
      if (other.GroundInput != 0F) {
        GroundInput = other.GroundInput;
      }
      if (other.GroundOutput != 0F) {
        GroundOutput = other.GroundOutput;
      }
      if (other.HotGas != 0F) {
        HotGas = other.HotGas;
      }
      if (other.Inside != 0F) {
        Inside = other.Inside;
      }
      if (other.LowerTank != 0F) {
        LowerTank = other.LowerTank;
      }
      if (other.Outside != 0F) {
        Outside = other.Outside;
      }
      if (other.UpperTank != 0F) {
        UpperTank = other.UpperTank;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Circuit1 = input.ReadFloat();
            break;
          }
          case 21: {
            Circuit2 = input.ReadFloat();
            break;
          }
          case 29: {
            Circuit3 = input.ReadFloat();
            break;
          }
          case 37: {
            GroundInput = input.ReadFloat();
            break;
          }
          case 45: {
            GroundOutput = input.ReadFloat();
            break;
          }
          case 53: {
            HotGas = input.ReadFloat();
            break;
          }
          case 61: {
            Inside = input.ReadFloat();
            break;
          }
          case 69: {
            LowerTank = input.ReadFloat();
            break;
          }
          case 77: {
            Outside = input.ReadFloat();
            break;
          }
          case 85: {
            UpperTank = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            Circuit1 = input.ReadFloat();
            break;
          }
          case 21: {
            Circuit2 = input.ReadFloat();
            break;
          }
          case 29: {
            Circuit3 = input.ReadFloat();
            break;
          }
          case 37: {
            GroundInput = input.ReadFloat();
            break;
          }
          case 45: {
            GroundOutput = input.ReadFloat();
            break;
          }
          case 53: {
            HotGas = input.ReadFloat();
            break;
          }
          case 61: {
            Inside = input.ReadFloat();
            break;
          }
          case 69: {
            LowerTank = input.ReadFloat();
            break;
          }
          case 77: {
            Outside = input.ReadFloat();
            break;
          }
          case 85: {
            UpperTank = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TankLimits : pb::IMessage<TankLimits>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TankLimits> _parser = new pb::MessageParser<TankLimits>(() => new TankLimits());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TankLimits> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HeatPump.HeatPumpServiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TankLimits() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TankLimits(TankLimits other) : this() {
      lowerTankMinimum_ = other.lowerTankMinimum_;
      lowerTankMinimumAdjusted_ = other.lowerTankMinimumAdjusted_;
      lowerTankMaximum_ = other.lowerTankMaximum_;
      lowerTankMaximumAdjusted_ = other.lowerTankMaximumAdjusted_;
      upperTankMinimum_ = other.upperTankMinimum_;
      upperTankMinimumAdjusted_ = other.upperTankMinimumAdjusted_;
      upperTankMaximum_ = other.upperTankMaximum_;
      upperTankMaximumAdjusted_ = other.upperTankMaximumAdjusted_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TankLimits Clone() {
      return new TankLimits(this);
    }

    /// <summary>Field number for the "lower_tank_minimum" field.</summary>
    public const int LowerTankMinimumFieldNumber = 1;
    private int lowerTankMinimum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LowerTankMinimum {
      get { return lowerTankMinimum_; }
      set {
        lowerTankMinimum_ = value;
      }
    }

    /// <summary>Field number for the "lower_tank_minimum_adjusted" field.</summary>
    public const int LowerTankMinimumAdjustedFieldNumber = 2;
    private int lowerTankMinimumAdjusted_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LowerTankMinimumAdjusted {
      get { return lowerTankMinimumAdjusted_; }
      set {
        lowerTankMinimumAdjusted_ = value;
      }
    }

    /// <summary>Field number for the "lower_tank_maximum" field.</summary>
    public const int LowerTankMaximumFieldNumber = 3;
    private int lowerTankMaximum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LowerTankMaximum {
      get { return lowerTankMaximum_; }
      set {
        lowerTankMaximum_ = value;
      }
    }

    /// <summary>Field number for the "lower_tank_maximum_adjusted" field.</summary>
    public const int LowerTankMaximumAdjustedFieldNumber = 4;
    private int lowerTankMaximumAdjusted_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LowerTankMaximumAdjusted {
      get { return lowerTankMaximumAdjusted_; }
      set {
        lowerTankMaximumAdjusted_ = value;
      }
    }

    /// <summary>Field number for the "upper_tank_minimum" field.</summary>
    public const int UpperTankMinimumFieldNumber = 5;
    private int upperTankMinimum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int UpperTankMinimum {
      get { return upperTankMinimum_; }
      set {
        upperTankMinimum_ = value;
      }
    }

    /// <summary>Field number for the "upper_tank_minimum_adjusted" field.</summary>
    public const int UpperTankMinimumAdjustedFieldNumber = 6;
    private int upperTankMinimumAdjusted_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int UpperTankMinimumAdjusted {
      get { return upperTankMinimumAdjusted_; }
      set {
        upperTankMinimumAdjusted_ = value;
      }
    }

    /// <summary>Field number for the "upper_tank_maximum" field.</summary>
    public const int UpperTankMaximumFieldNumber = 7;
    private int upperTankMaximum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int UpperTankMaximum {
      get { return upperTankMaximum_; }
      set {
        upperTankMaximum_ = value;
      }
    }

    /// <summary>Field number for the "upper_tank_maximum_adjusted" field.</summary>
    public const int UpperTankMaximumAdjustedFieldNumber = 8;
    private int upperTankMaximumAdjusted_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int UpperTankMaximumAdjusted {
      get { return upperTankMaximumAdjusted_; }
      set {
        upperTankMaximumAdjusted_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TankLimits);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TankLimits other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LowerTankMinimum != other.LowerTankMinimum) return false;
      if (LowerTankMinimumAdjusted != other.LowerTankMinimumAdjusted) return false;
      if (LowerTankMaximum != other.LowerTankMaximum) return false;
      if (LowerTankMaximumAdjusted != other.LowerTankMaximumAdjusted) return false;
      if (UpperTankMinimum != other.UpperTankMinimum) return false;
      if (UpperTankMinimumAdjusted != other.UpperTankMinimumAdjusted) return false;
      if (UpperTankMaximum != other.UpperTankMaximum) return false;
      if (UpperTankMaximumAdjusted != other.UpperTankMaximumAdjusted) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (LowerTankMinimum != 0) hash ^= LowerTankMinimum.GetHashCode();
      if (LowerTankMinimumAdjusted != 0) hash ^= LowerTankMinimumAdjusted.GetHashCode();
      if (LowerTankMaximum != 0) hash ^= LowerTankMaximum.GetHashCode();
      if (LowerTankMaximumAdjusted != 0) hash ^= LowerTankMaximumAdjusted.GetHashCode();
      if (UpperTankMinimum != 0) hash ^= UpperTankMinimum.GetHashCode();
      if (UpperTankMinimumAdjusted != 0) hash ^= UpperTankMinimumAdjusted.GetHashCode();
      if (UpperTankMaximum != 0) hash ^= UpperTankMaximum.GetHashCode();
      if (UpperTankMaximumAdjusted != 0) hash ^= UpperTankMaximumAdjusted.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (LowerTankMinimum != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(LowerTankMinimum);
      }
      if (LowerTankMinimumAdjusted != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(LowerTankMinimumAdjusted);
      }
      if (LowerTankMaximum != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(LowerTankMaximum);
      }
      if (LowerTankMaximumAdjusted != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(LowerTankMaximumAdjusted);
      }
      if (UpperTankMinimum != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(UpperTankMinimum);
      }
      if (UpperTankMinimumAdjusted != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(UpperTankMinimumAdjusted);
      }
      if (UpperTankMaximum != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(UpperTankMaximum);
      }
      if (UpperTankMaximumAdjusted != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(UpperTankMaximumAdjusted);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (LowerTankMinimum != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(LowerTankMinimum);
      }
      if (LowerTankMinimumAdjusted != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(LowerTankMinimumAdjusted);
      }
      if (LowerTankMaximum != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(LowerTankMaximum);
      }
      if (LowerTankMaximumAdjusted != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(LowerTankMaximumAdjusted);
      }
      if (UpperTankMinimum != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(UpperTankMinimum);
      }
      if (UpperTankMinimumAdjusted != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(UpperTankMinimumAdjusted);
      }
      if (UpperTankMaximum != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(UpperTankMaximum);
      }
      if (UpperTankMaximumAdjusted != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(UpperTankMaximumAdjusted);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (LowerTankMinimum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LowerTankMinimum);
      }
      if (LowerTankMinimumAdjusted != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LowerTankMinimumAdjusted);
      }
      if (LowerTankMaximum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LowerTankMaximum);
      }
      if (LowerTankMaximumAdjusted != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LowerTankMaximumAdjusted);
      }
      if (UpperTankMinimum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UpperTankMinimum);
      }
      if (UpperTankMinimumAdjusted != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UpperTankMinimumAdjusted);
      }
      if (UpperTankMaximum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UpperTankMaximum);
      }
      if (UpperTankMaximumAdjusted != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UpperTankMaximumAdjusted);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TankLimits other) {
      if (other == null) {
        return;
      }
      if (other.LowerTankMinimum != 0) {
        LowerTankMinimum = other.LowerTankMinimum;
      }
      if (other.LowerTankMinimumAdjusted != 0) {
        LowerTankMinimumAdjusted = other.LowerTankMinimumAdjusted;
      }
      if (other.LowerTankMaximum != 0) {
        LowerTankMaximum = other.LowerTankMaximum;
      }
      if (other.LowerTankMaximumAdjusted != 0) {
        LowerTankMaximumAdjusted = other.LowerTankMaximumAdjusted;
      }
      if (other.UpperTankMinimum != 0) {
        UpperTankMinimum = other.UpperTankMinimum;
      }
      if (other.UpperTankMinimumAdjusted != 0) {
        UpperTankMinimumAdjusted = other.UpperTankMinimumAdjusted;
      }
      if (other.UpperTankMaximum != 0) {
        UpperTankMaximum = other.UpperTankMaximum;
      }
      if (other.UpperTankMaximumAdjusted != 0) {
        UpperTankMaximumAdjusted = other.UpperTankMaximumAdjusted;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            LowerTankMinimum = input.ReadInt32();
            break;
          }
          case 16: {
            LowerTankMinimumAdjusted = input.ReadInt32();
            break;
          }
          case 24: {
            LowerTankMaximum = input.ReadInt32();
            break;
          }
          case 32: {
            LowerTankMaximumAdjusted = input.ReadInt32();
            break;
          }
          case 40: {
            UpperTankMinimum = input.ReadInt32();
            break;
          }
          case 48: {
            UpperTankMinimumAdjusted = input.ReadInt32();
            break;
          }
          case 56: {
            UpperTankMaximum = input.ReadInt32();
            break;
          }
          case 64: {
            UpperTankMaximumAdjusted = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            LowerTankMinimum = input.ReadInt32();
            break;
          }
          case 16: {
            LowerTankMinimumAdjusted = input.ReadInt32();
            break;
          }
          case 24: {
            LowerTankMaximum = input.ReadInt32();
            break;
          }
          case 32: {
            LowerTankMaximumAdjusted = input.ReadInt32();
            break;
          }
          case 40: {
            UpperTankMinimum = input.ReadInt32();
            break;
          }
          case 48: {
            UpperTankMinimumAdjusted = input.ReadInt32();
            break;
          }
          case 56: {
            UpperTankMaximum = input.ReadInt32();
            break;
          }
          case 64: {
            UpperTankMaximumAdjusted = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
